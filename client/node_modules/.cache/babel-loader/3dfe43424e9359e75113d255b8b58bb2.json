{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dennis\\\\Desktop\\\\ReactBuilds\\\\Travellog\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport { get } from \"../../server/src/api/logs\";\nimport { listLogEntries } from \"./API\";\nimport \"./App.css\";\nimport LogEntryForm from \"./LogEntryForm\";\n\nconst App = () => {\n  _s();\n\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 52.520008,\n    longitude: 13.404954,\n    zoom: 3\n  });\n\n  const getEntries = async () => {\n    const logEntries = await listLogEntries();\n    setLogEntries(logEntries);\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const showAddMarkerPopup = e => {\n    console.log(e);\n    const [longitude, latitude] = e.lngLat;\n    setAddEntryLocation({\n      latitude,\n      longitude\n    });\n  }; //TODO do some stuff function\n\n\n  return /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n    mapStyle: \"mapbox://styles/travellogger/ckhcfmot61fct19mczrxd7a82\",\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    onViewportChange: setViewport,\n    onDblClick: showAddMarkerPopup,\n    children: [logEntries.map(entry => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        className: \"marker\",\n        latitude: entry.latitude,\n        longitude: entry.longitude // offsetLeft={-12}\n        // offsetTop={-24}\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseOver: () => setShowPopup({ ...showPopup,\n            [entry._id]: true\n          }),\n          onMouseLeave: () => setShowPopup(false),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"marker\",\n            src: \"https://i.imgur.com/y0G5YTX.png\",\n            alt: \"marker\"\n          }, entry._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, entry._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), showPopup[entry._id] ? /*#__PURE__*/_jsxDEV(Popup, {\n        className: \"popup\",\n        latitude: entry.latitude,\n        longitude: entry.longitude,\n        closeButton: true,\n        closeOnClick: false,\n        onClose: () => setShowPopup(false),\n        anchor: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: entry.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true)), addEntryLocation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        latitude: addEntryLocation.latitude,\n        longitude: addEntryLocation.longitude // offsetLeft={-12}\n        // offsetTop={-24}\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"red-marker\",\n            src: \"https://www.iconsdb.com/icons/preview/red/map-marker-2-xxl.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        latitude: addEntryLocation.latitude,\n        longitude: addEntryLocation.longitude,\n        closeButton: true,\n        closeOnClick: false,\n        onClose: () => setAddEntryLocation(null),\n        anchor: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add your new location here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LogEntryForm, {\n            onClose: () => {\n              setAddEntryLocation(null);\n              getEntries();\n            },\n            location: addEntryLocation,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"zkbmJz9WsyKqzERpgAHqu3Q+Deg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dennis/Desktop/ReactBuilds/Travellog/client/src/App.js"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","get","listLogEntries","LogEntryForm","App","logEntries","setLogEntries","showPopup","setShowPopup","addEntryLocation","setAddEntryLocation","viewport","setViewport","width","height","latitude","longitude","zoom","getEntries","showAddMarkerPopup","e","console","log","lngLat","process","env","REACT_APP_MAPBOX_TOKEN","map","entry","_id","title","comments"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport { get } from \"../../server/src/api/logs\";\nimport { listLogEntries } from \"./API\";\nimport \"./App.css\";\nimport LogEntryForm from \"./LogEntryForm\";\nconst App = () => {\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 52.520008,\n    longitude: 13.404954,\n    zoom: 3,\n  });\n\n  const getEntries = async () => {\n    const logEntries = await listLogEntries();\n    setLogEntries(logEntries);\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const showAddMarkerPopup = (e) => {\n    console.log(e);\n    const [longitude, latitude] = e.lngLat;\n    setAddEntryLocation({\n      latitude,\n      longitude,\n    });\n  };\n\n  //TODO do some stuff function\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapStyle=\"mapbox://styles/travellogger/ckhcfmot61fct19mczrxd7a82\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n      onViewportChange={setViewport}\n      onDblClick={showAddMarkerPopup}\n    >\n      {logEntries.map((entry) => (\n        <>\n          <Marker\n            key={entry._id}\n            className=\"marker\"\n            latitude={entry.latitude}\n            longitude={entry.longitude}\n            // offsetLeft={-12}\n            // offsetTop={-24}\n          >\n            <div\n              onMouseOver={() =>\n                setShowPopup({\n                  ...showPopup,\n                  [entry._id]: true,\n                })\n              }\n              onMouseLeave={() => setShowPopup(false)}\n            >\n              <img\n                key={entry._id}\n                className=\"marker\"\n                src=\"https://i.imgur.com/y0G5YTX.png\"\n                alt=\"marker\"\n              ></img>\n            </div>\n          </Marker>\n          {showPopup[entry._id] ? (\n            <Popup\n              className=\"popup\"\n              latitude={entry.latitude}\n              longitude={entry.longitude}\n              closeButton={true}\n              closeOnClick={false}\n              onClose={() => setShowPopup(false)}\n              anchor=\"top\"\n            >\n              <div>{entry.title}</div>\n              {/* <img className=\"picture\" alt=\"\">\n                {entry.image}\n              </img> */}\n              <p>{entry.comments}</p>\n            </Popup>\n          ) : null}\n        </>\n      ))}\n\n      {addEntryLocation ? (\n        <>\n          <Marker\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n            // offsetLeft={-12}\n            // offsetTop={-24}\n          >\n            <div>\n              <img\n                className=\"red-marker\"\n                src=\"https://www.iconsdb.com/icons/preview/red/map-marker-2-xxl.png\"\n                alt=\"\"\n              ></img>\n            </div>\n          </Marker>\n\n          <Popup\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n            closeButton={true}\n            closeOnClick={false}\n            onClose={() => setAddEntryLocation(null)}\n            anchor=\"top\"\n          >\n            <div className=\"popup\">\n              <h3>Add your new location here</h3>\n              <LogEntryForm\n                onClose={() => {\n                  setAddEntryLocation(null);\n                  getEntries();\n                }}\n                location={addEntryLocation}\n              >\n                {\" \"}\n              </LogEntryForm>\n            </div>\n          </Popup>\n        </>\n      ) : null}\n    </ReactMapGL>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}